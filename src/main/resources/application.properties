spring.application.name=notificationService
server.port={SERVER_PORT}
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.csniico.notificationService.dto.Task
spring.kafka.consumer.properties.spring.json.trusted.packages=com.csniico.notificationService.dto,com.csniico.notificationService.dto.*,com.csniico.task_api.dto,com.csniico.userService.dto
spring.kafka.consumer.properties.spring.json.type.mapping=com.csniico.task_api.dto.TaskRequest:com.csniico.notificationService.dto.Task,com.csniico.userService.dto.UserRequest:com.csniico.notificationService.dto.User

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
